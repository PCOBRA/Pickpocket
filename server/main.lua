local ESX = exports["es_extended"]:getSharedObject()
-- H√†m t√¨m NPC g·∫ßn nh·∫•t trong b√°n k√≠nh 5m
local function GetClosestNPC(coords)
    local pedList = GetGamePool('CPed')
    local closestPed = nil
    local closestDist = 3.0 -- B√°n k√≠nh t·ªëi ƒëa

    for _, ped in ipairs(pedList) do
        if DoesEntityExist(ped) and not IsPedAPlayer(ped) then
            local pedCoords = GetEntityCoords(ped)
            local dist = #(coords - pedCoords)

            if dist < closestDist then
                closestPed = ped
                closestDist = dist
            end
        end
    end

    return closestPed
end
-- Ki·ªÉm tra n·∫øu t·ªça ƒë·ªô c·ªßa ng∆∞·ªùi ch∆°i n·∫±m trong khu v·ª±c c·∫•m
local function isInRestrictedZone(coords)
    for _, zone in ipairs(Config.RestrictedZones) do
        if zone.type == "circle" then
            -- Ki·ªÉm tra khu v·ª±c h√¨nh tr√≤n
            local dist = #(coords - zone.center)
            if dist < zone.radius then
                return true
            end
        elseif zone.type == "polygon" then
            -- Ki·ªÉm tra khu v·ª±c ƒëa gi√°c b·∫±ng thu·∫≠t to√°n Ray-Casting
            local inside = false
            local j = #zone.points
            for i = 1, #zone.points do
                local xi, yi = zone.points[i].x, zone.points[i].y
                local xj, yj = zone.points[j].x, zone.points[j].y
                if ((yi > coords.y) ~= (yj > coords.y)) and
                   (coords.x < (xj - xi) * (coords.y - yi) / (yj - yi) + xi) then
                    inside = not inside
                end
                j = i
            end
            if inside then
                return true
            end
        end
    end
    return false
end

RegisterNetEvent('pickpocket:attempt')
AddEventHandler('pickpocket:attempt', function()
    local src = source
    local xPlayer = ESX.GetPlayerFromId(src)
    
    if not xPlayer then return end
    
    local playerJob = string.lower(xPlayer.getJob().name) -- Chuy·ªÉn v·ªÅ ch·ªØ th∆∞·ªùng
    print("üìå Ngh·ªÅ nghi·ªáp c·ªßa ng∆∞·ªùi ch∆°i:", playerJob) -- Debug log
    
    -- Ki·ªÉm tra n·∫øu ngh·ªÅ b·ªã c·∫•m
    for _, job in ipairs(Config.BlacklistedJobs) do
        if playerJob == string.lower(job) then
            print("‚õî Ng∆∞·ªùi ch∆°i c√≥ ngh·ªÅ b·ªã c·∫•m ƒëang c·ªë g·∫Øng m√≥c t√∫i!", playerJob) -- Debug log
            TriggerClientEvent('pickpocket:cancelAction', src) -- H·ªßy ngay h√†nh ƒë·ªông
            TriggerClientEvent('ox_lib:notify', src, {
                title = "C·∫£nh b√°o",
                description = "B·∫°n kh√¥ng th·ªÉ th·ª±c hi·ªán h√†nh ƒë·ªông n√†y!",
                type = "error",
                position = "center-right"
            })
            return
        end
    end
    
    -- N·∫øu h·ª£p l·ªá, ti·∫øp t·ª•c th·ª±c hi·ªán h√†nh ƒë·ªông
    local rewards = {"rolex", "diamond_ring", "lphone1"}
    local reward = rewards[math.random(#rewards)]
    
    xPlayer.addInventoryItem(reward, 1)
    
    TriggerClientEvent('ox_lib:notify', src, {
        title = "M√≥c t√∫i th√†nh c√¥ng!",
        description = "B·∫°n nh·∫≠n ƒë∆∞·ª£c " .. reward .. "!",
        type = "success",
        position = "center-right"
    })
end)

RegisterNetEvent('pickpocket:checkPolice')
AddEventHandler('pickpocket:checkPolice', function(npcNetId)
    local src = source
    local playerPed = GetPlayerPed(src)
    local playerCoords = GetEntityCoords(playerPed)
    local currentTime = os.time()

    -- Ki·ªÉm tra n·∫øu cooldown ƒë∆∞·ª£c b·∫≠t
    if Config.Cooldown.enable then
        playerCooldowns = playerCooldowns or {} -- ƒê·∫£m b·∫£o bi·∫øn t·ªìn t·∫°i
        local cooldownTime = Config.Cooldown.time -- L·∫•y th·ªùi gian t·ª´ config.lua
        
        if playerCooldowns[src] and (currentTime - playerCooldowns[src]) < cooldownTime then
            local remaining = cooldownTime - (currentTime - playerCooldowns[src])
            TriggerClientEvent('ox_lib:notify', src, {
                title = "C·∫£nh b√°o",
                description = "B·∫°n c·∫ßn ch·ªù " .. remaining .. " gi√¢y tr∆∞·ªõc khi m√≥c t√∫i ti·∫øp!",
                type = "error",
                position = "center-right",
            })
            return
        end
    
        -- ƒê·∫∑t cooldown n·∫øu ng∆∞·ªùi ch∆°i ƒë∆∞·ª£c ph√©p m√≥c t√∫i
        playerCooldowns[src] = currentTime
    end
    

    -- Ki·ªÉm tra s·ªë l∆∞·ª£ng c·∫£nh s√°t online
    local policePlayers = ESX.GetExtendedPlayers('job', 'police')
    if #policePlayers < Config.MinPolice then
        TriggerClientEvent('ox_lib:notify', src, {
            title = "C·∫£nh b√°o",
            description = "Kh√¥ng ƒë·ªß c·∫£nh s√°t ƒë·ªÉ th·ª±c hi·ªán h√†nh vi n√†y!",
            type = "error",
            position = "center-right",
        })
        return
    end

    -- Ki·ªÉm tra n·∫øu ƒëang ·ªü khu v·ª±c c·∫•m
    if isInRestrictedZone(playerCoords) then
        TriggerClientEvent('ox_lib:notify', src, {
            title = "C·∫£nh b√°o",
            description = "B·∫°n kh√¥ng th·ªÉ m√≥c t√∫i ·ªü khu v·ª±c n√†y!",
            type = "error",
            position = "center-right",
        })
        return
    end

    -- X√°c nh·∫≠n NPC t·ª´ network ID ƒë∆∞·ª£c g·ª≠i t·ª´ client
    local npc = NetworkGetEntityFromNetworkId(npcNetId)
    if not npc or not DoesEntityExist(npc) then
        TriggerClientEvent('ox_lib:notify', src, {
            title = "C·∫£nh b√°o",
            description = "Kh√¥ng t√¨m th·∫•y NPC h·ª£p l·ªá!",
            type = "error",
            position = "center-right",
        })
        return
    end

    local policePlayers = ESX.GetExtendedPlayers('job', 'police')

    -- X√°c su·∫•t c·∫£nh s√°t nh·∫≠n th√¥ng b√°o t·ª´ config.lua
    if math.random(1, 100) <= Config.PoliceAlertChance then
        for _, police in pairs(policePlayers) do
            TriggerClientEvent('pickpocket:notifyPolice', police.source)
            TriggerClientEvent('pickpocket:setPoliceBlip', police.source, playerCoords)
        end
    end

    TriggerClientEvent('pickpocket:startProgress', src)
end)



